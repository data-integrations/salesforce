# Copyright Â© 2023 Cask Data, Inc.
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# Note: Any changes to this workflow would be used only after merging into develop
name: Build e2e tests

on:
  workflow_run:
    workflows:
      - Trigger build
    types:
      - completed

jobs:
  build:
    runs-on: k8s-runner-e2e

    if: ${{ github.event.workflow_run.conclusion != 'skipped' }}

    steps:
      # Pinned 1.0.0 version
      - uses: haya14busa/action-workflow_run-status@967ed83efa565c257675ed70cfe5231f062ddd94
      - uses: actions/checkout@v3
        with:
          path: plugin
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Checkout e2e test repo
        uses: actions/checkout@v3
        with:
          repository: cdapio/cdap-e2e-tests
          path: e2e

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ github.workflow }}

      - name: Get Secrets from GCP Secret Manager
        id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v0'
        with:
          secrets: |-
            SALESFORCE_USERNAME:cdapio-github-builds/SALESFORCE_USERNAME
            SALESFORCE_PASSWORD:cdapio-github-builds/SALESFORCE_PASSWORD
            SALESFORCE_SECURITY_TOKEN:cdapio-github-builds/SALESFORCE_SECURITY_TOKEN
            SALESFORCE_CONSUMER_KEY:cdapio-github-builds/SALESFORCE_CONSUMER_KEY
            SALESFORCE_CONSUMER_SECRET:cdapio-github-builds/SALESFORCE_CONSUMER_SECRET

      - name: Run tests
        run: python3 e2e/src/main/scripts/run_e2e_test.py
        env:
          SALESFORCE_USERNAME: ${{ steps.secrets.outputs.SALESFORCE_USERNAME }}
          SALESFORCE_PASSWORD: ${{ steps.secrets.outputs.SALESFORCE_PASSWORD }}
          SALESFORCE_SECURITY_TOKEN: ${{ steps.secrets.outputs.SALESFORCE_SECURITY_TOKEN }}
          SALESFORCE_CONSUMER_KEY: ${{ steps.secrets.outputs.SALESFORCE_CONSUMER_KEY }}
          SALESFORCE_CONSUMER_SECRET: ${{ steps.secrets.outputs.SALESFORCE_CONSUMER_SECRET }}

      - name: Upload report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Cucumber report
          path: ./plugin/target/cucumber-reports

      - name: Upload debug files
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Debug files
          path: ./**/target/e2e-debug

      - name: Upload reports to GCS
        uses: google-github-actions/upload-cloud-storage@v0
        if: always()
        with:
          path: ./plugin/target/cucumber-reports
          destination: e2e-tests-cucumber-reports/${{ github.event.repository.name }}/${{ github.ref }}

      - name: github-status-action
        uses: Sibz/github-status-action@67af1f4042a5a790681aad83c44008ca6cfab83d
        if: always()
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          state: success
          context: Cucumber report
          sha: ${{github.event.pull_request.head.sha || github.sha}}

